const Web3 = require('web3')
const web3 = new Web3(new Web3.providers.HttpProvider('HTTP://127.0.0.1:7545'))

// Deploy contract
async function deploy() {
     // let us get all the accounts
     const accounts = await web3.eth.getAccounts()
     console.log(accounts) // will print the account addresses to console

     // print balance of first account
     const balance = await web3.eth.getBalance(accounts[0])
     console.log('balance', web3.utils.fromWei(balance, 'ether'))

     // load the contract ABI and BIN
     // getting the ABI ready
     const abi = require('./abi.json')
     const bytecode =
          '608060405234801561001057600080fd5b506104fa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633bc5de301461003b578063a2aac7ab14610059575b600080fd5b610043610089565b60405161005091906102fc565b60405180910390f35b610073600480360381019061006e9190610250565b61011b565b60405161008091906102e1565b60405180910390f35b606060008054610098906103de565b80601f01602080910402602001604051908101604052809291908181526020018280546100c4906103de565b80156101115780601f106100e657610100808354040283529160200191610111565b820191906000526020600020905b8154815290600101906020018083116100f457829003601f168201915b5050505050905090565b6000816000908051906020019061013392919061013d565b5060019050919050565b828054610149906103de565b90600052602060002090601f01602090048101928261016b57600085556101b2565b82601f1061018457805160ff19168380011785556101b2565b828001600101855582156101b2579182015b828111156101b1578251825591602001919060010190610196565b5b5090506101bf91906101c3565b5090565b5b808211156101dc5760008160009055506001016101c4565b5090565b60006101f36101ee84610343565b61031e565b90508281526020810184848401111561020f5761020e6104a4565b5b61021a84828561039c565b509392505050565b600082601f8301126102375761023661049f565b5b81356102478482602086016101e0565b91505092915050565b600060208284031215610266576102656104ae565b5b600082013567ffffffffffffffff811115610284576102836104a9565b5b61029084828501610222565b91505092915050565b6102a281610390565b82525050565b60006102b382610374565b6102bd818561037f565b93506102cd8185602086016103ab565b6102d6816104b3565b840191505092915050565b60006020820190506102f66000830184610299565b92915050565b6000602082019050818103600083015261031681846102a8565b905092915050565b6000610328610339565b90506103348282610410565b919050565b6000604051905090565b600067ffffffffffffffff82111561035e5761035d610470565b5b610367826104b3565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60008115159050919050565b82818337600083830152505050565b60005b838110156103c95780820151818401526020810190506103ae565b838111156103d8576000848401525b50505050565b600060028204905060018216806103f657607f821691505b6020821081141561040a57610409610441565b5b50919050565b610419826104b3565b810181811067ffffffffffffffff8211171561043857610437610470565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f830116905091905056fea26469706673582212208afc3f662be0e72954d7e9a27062859eeba1d8e1677b9ed99b905542efeb05a764736f6c63430008070033'
     const code = '0x' + bytecode

     console.log('Attempting to deploy from account:', accounts[0])

     var account = accounts[0]

     var testContract = new web3.eth.Contract(abi)

     const newContractInstance = await testContract
          .deploy({
               data: code,
          })
          .send({ from: account, gas: '4700000' }, (err, transactionHash) => {
               console.log('Transaction Hash :', transactionHash)
          })
          .on('confirmation', () => { })
          .then((newContractInstance) => {
               console.log(
                    'Deployed Contract Address : ',
                    newContractInstance.options.address
               )
               return newContractInstance
          })

     console.log('Attempting to submit value from account:', account)

     await newContractInstance.methods.submitData('Talentsprint').send({ from: account, gas: '4700000' }, (err, transactionHash) => {
          console.log('Transaction Hash :', transactionHash)
     })
          .on('confirmation', () => { })
          .then((result) => {
               console.log(
                    'Tx Details : ',
                    result
               )
          })

     var output = await newContractInstance.methods.getData().call({ from: account, gas: '4700000' })
          .then((result) => {
               return result
          })

     console.log("Returned string value is: " + output);

     process.exit()
}

deploy()
